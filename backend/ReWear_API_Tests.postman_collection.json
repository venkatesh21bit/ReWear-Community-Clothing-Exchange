{
  "info": {
    "name": "ReWear API Tests",
    "description": "Complete API test collection for ReWear Community Clothing Exchange",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "1. API Root",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/",
          "host": ["{{base_url}}"],
          "path": ["api", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response contains API info', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('message');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "2. User Registration (Signup)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"testuser@example.com\",\n    \"password\": \"testpassword123\",\n    \"password_confirm\": \"testpassword123\",\n    \"first_name\": \"Test\",\n    \"last_name\": \"User\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/auth/signup/",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "signup", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test('Response contains user data', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('user');",
              "    pm.expect(jsonData.user).to.have.property('email');",
              "    pm.expect(jsonData.user.email).to.eql('testuser@example.com');",
              "});",
              "",
              "pm.test('Response contains tokens', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('access');",
              "    pm.expect(jsonData).to.have.property('refresh');",
              "    ",
              "    // Store tokens for future requests",
              "    pm.environment.set('access_token', jsonData.access);",
              "    pm.environment.set('refresh_token', jsonData.refresh);",
              "    pm.environment.set('test_user_email', jsonData.user.email);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "3. User Login",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"testuser@example.com\",\n    \"password\": \"testpassword123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/auth/login/",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "login", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response contains user data', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('user');",
              "    pm.expect(jsonData.user).to.have.property('email');",
              "});",
              "",
              "pm.test('Response contains tokens', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('access');",
              "    pm.expect(jsonData).to.have.property('refresh');",
              "    ",
              "    // Update tokens",
              "    pm.environment.set('access_token', jsonData.access);",
              "    pm.environment.set('refresh_token', jsonData.refresh);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "4. Admin Login",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"admin@rewear.com\",\n    \"password\": \"admin123\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/auth/login/",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "login", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Admin login successful', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Admin user has correct role', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.user).to.have.property('role');",
              "    pm.expect(jsonData.user.role).to.eql('admin');",
              "});",
              "",
              "// Store admin tokens",
              "var jsonData = pm.response.json();",
              "pm.environment.set('admin_access_token', jsonData.access);",
              "pm.environment.set('admin_refresh_token', jsonData.refresh);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "5. Get Current User Profile",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/users/me/",
          "host": ["{{base_url}}"],
          "path": ["api", "users", "me", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response contains user profile', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('user_id');",
              "    pm.expect(jsonData).to.have.property('email');",
              "    pm.expect(jsonData).to.have.property('first_name');",
              "    pm.expect(jsonData).to.have.property('last_name');",
              "    pm.expect(jsonData).to.have.property('points_balance');",
              "    ",
              "    // Store user ID for public profile test",
              "    pm.environment.set('test_user_id', jsonData.user_id);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "6. Update Current User Profile",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"first_name\": \"Updated\",\n    \"last_name\": \"User\",\n    \"bio\": \"This is my updated bio for testing\",\n    \"location\": \"New York, NY\",\n    \"phone_number\": \"+1234567890\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/users/me/",
          "host": ["{{base_url}}"],
          "path": ["api", "users", "me", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Profile updated successfully', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.first_name).to.eql('Updated');",
              "    pm.expect(jsonData.last_name).to.eql('User');",
              "    pm.expect(jsonData.bio).to.eql('This is my updated bio for testing');",
              "    pm.expect(jsonData.location).to.eql('New York, NY');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "7. Get Public User Profile",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/users/{{test_user_id}}/",
          "host": ["{{base_url}}"],
          "path": ["api", "users", "{{test_user_id}}", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Public profile contains limited info', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('user_id');",
              "    pm.expect(jsonData).to.have.property('first_name');",
              "    pm.expect(jsonData).to.have.property('bio');",
              "    ",
              "    // Should not contain sensitive info",
              "    pm.expect(jsonData).to.not.have.property('email');",
              "    pm.expect(jsonData).to.not.have.property('phone_number');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "8. Token Refresh",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/auth/token/refresh/",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "token", "refresh", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('New access token received', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('access');",
              "    ",
              "    // Update access token",
              "    pm.environment.set('access_token', jsonData.access);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "9. Test Invalid Login",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"invalid@example.com\",\n    \"password\": \"wrongpassword\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/auth/login/",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "login", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 401 for invalid login', function () {",
              "    pm.response.to.have.status(401);",
              "});",
              "",
              "pm.test('Error message present', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('error');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "10. Test Unauthorized Access",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/users/me/",
          "host": ["{{base_url}}"],
          "path": ["api", "users", "me", ""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 401 for unauthorized access', function () {",
              "    pm.response.to.have.status(401);",
              "});",
              "",
              "pm.test('Authentication required message', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('detail');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "https://rewear-community-clothing-exchange-production.up.railway.app"
    }
  ]
}
